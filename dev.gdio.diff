diff --git a/.gitconfig b/.gitconfig
new file mode 100644
--- /dev/null
+++ ./.gitconfig
@@ -0,0 +1,17 @@
+[remote "vim-scripts"]
+    url = git@github.com:vim-scripts/bash-support.vim.git
+    fetch = +refs/heads/*:refs/remotes/vim-scripts/*
+[remote "github"]
+    url = git@github.com:huangyingw/bash-support.git
+    fetch = +refs/heads/*:refs/remotes/github/*
+[push]
+    remote = origin
+    remote = github
+[gsync]
+    remote = vim-scripts
+    target = vim-scripts/master
+[branch "dev"]
+    remote = origin
+    merge = refs/heads/dev
+[gdio]
+    ignore = .gitignore
diff --git a/autoload/mmtemplates/core.vim b/autoload/mmtemplates/core.vim
--- ./autoload/mmtemplates/core.vim
+++ ./autoload/mmtemplates/core.vim
@@ -2516,7 +2516,10 @@ function! s:InsertIntoBuffer ( text, placement, indentation, flag_mode )
 			exe ':1'
 			call s:OpenFold('start')
 			let pos1 = 1
+            try
                 silent put! = text
+            catch
+            endtry
 			let pos2 = line(".")
 			"
 		elseif placement == 'append' || placement == 'insert'
@@ -2609,7 +2612,10 @@ function! s:InsertIntoBuffer ( text, placement, indentation, flag_mode )
 	" proper indenting
 	if indentation
 		silent exe ":".pos1
+        try
             silent exe "normal! ".( pos2-pos1+1 )."=="
+        catch
+        endtry
 	endif
 	"
 	return [ pos1, pos2 ]
diff --git a/bash-support/rc/customization.vimrc b/bash-support/rc/customization.vimrc
--- ./bash-support/rc/customization.vimrc
+++ ./bash-support/rc/customization.vimrc
@@ -61,7 +61,6 @@ endif
 set autoindent                  " copy indent from current line
 set autoread                    " read open files again when changed outside Vim
 set autowrite                   " write a modified buffer on each :next , ...
-set backspace=indent,eol,start  " backspacing over everything in insert mode
 set backup                      " keep a backup file
 set browsedir=current           " which directory to use for the file browser
 set complete+=k                 " scan the files given with the 'dictionary' option
diff --git a/bash-support/scripts/wrapper.sh b/bash-support/scripts/wrapper.sh
--- ./bash-support/scripts/wrapper.sh
+++ ./bash-support/scripts/wrapper.sh
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!/bin/zsh
 #===============================================================================
 #          FILE:  wrapper.sh
 #         USAGE:  ./wrapper.sh scriptname [cmd-line-args] 
diff --git a/bash-support/templates/comments.templates b/bash-support/templates/comments.templates
--- ./bash-support/templates/comments.templates
+++ ./bash-support/templates/comments.templates
@@ -16,26 +16,13 @@
 #       RETURNS:  
 #-------------------------------------------------------------------------------
 == Comments.file header == start, map:ch ==
-#!/bin/bash - 
-#===============================================================================
-#
-#          FILE: |FILENAME|
-# 
-#         USAGE: ./|FILENAME| 
-# 
-#   DESCRIPTION: 
-# 
-#       OPTIONS: ---
-#  REQUIREMENTS: ---
-#          BUGS: ---
-#         NOTES: ---
-#        AUTHOR: |AUTHOR| (|AUTHORREF|), |EMAIL|
-#  ORGANIZATION: |ORGANIZATION|
-#       CREATED: |DATE| |TIME|
-#      REVISION:  ---
-#===============================================================================
+#!/bin/zsh
+SCRIPT=$(realpath "$0")
+SCRIPTPATH=$(dirname "$SCRIPT")
+cd "$SCRIPTPATH"
+
 
-set -o nounset                              # Treat unset variables as an error
+cd -
 <CURSOR>
 == ENDTEMPLATE ==
 
diff --git a/ftplugin/sh.vim b/ftplugin/sh.vim
--- ./ftplugin/sh.vim
+++ ./ftplugin/sh.vim
@@ -41,3 +41,8 @@ call Bash_SetMapLeader ()
 "-------------------------------------------------------------------------------
 call Bash_ResetMapLeader ()
 "
+"
+" automatically give executable permissions if file begins with #! and contains
+" '/bin/' in the path
+"
+au BufWritePost * if getline(1) =~ "^#!" | if getline(1) =~ "/bin/" | silent execute "!chmod a+x <afile>" | endif | endif
